---

- name: Create Ec2 Instance
  tasks:
    - name: Launch Instance
      ec2:
          key_name: gwkeys
          instance_type: t2.micro
          image: ami-67589505
          wait: yes
          group: DefaultServerGroup
          count: 1
          region: ap-southeast-2
          vpc_subnet_id: subnet-ea500f8d
          assign_public_ip: yes
          instance_tags:
              webservers: app1

#- hosts: localhost
#  connection: local
#  gather_facts: False
#  tasks:
#    - name: Provision a set of instances
#      ec2:
#         key_name: my_key
#         group: test
#         instance_type: t2.micro
#         image: ap-southeast-2
#         wait: true
#         exact_count: 1
#         count_tag:
#            Name: Webserver1
#         instance_tags:
#            Name: Webservers
#      register: ec2

#- name: Create my instance
#  hosts: localhost
#  gather_facts: False
#  vars:
#    key_name: gwkeys
#    instance_type: t2.micro
#    security_group: DefaultServerGroup
#    image: ami-67589505
#    region: ap-southeast-2
#  tasks:
#    - name: Launch instance
#      ec2:
#         key_name: "{{ key_name }}"
#         group: "{{ security_group }}"
#         instance_type: "{{ instance_type }}"
#         image: "{{ image }}"
#         wait: true
#         region: "{{ region }}"
#         vpc_subnet_id: subnet-29e63245
#         assign_public_ip: yes
#      register: ec2
#
#    - name: Add new instance to host group
#      add_host:
#        hostname: "{{ item.public_ip }}"
#        groupname: launched
#      with_items: "{{ ec2.instances }}"
#
#    - name: Wait for SSH to come up
#      wait_for:
#        host: "{{ item.public_dns_name }}"
#        port: 22
#        delay: 60
#        timeout: 320
#        state: started
#      with_items: "{{ ec2.instances }}"

# start the firewalld

#  tasks:
#    - name: Ensure firewall service is up and running
#      service: name=httpd state=started
